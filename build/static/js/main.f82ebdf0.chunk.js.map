{"version":3,"sources":["components/Buttons.js","components/List.js","pages/Home.js","components/Control.js","pages/Demo01.js","components/Input.js","components/TodoList.js","index.js"],"names":["Buttons","props","map","item","key","onClick","getData","List","this","renderTodos","style","color","Component","Demo01","width","height","background","name","prototype","PropTypes","string","isRequired","defaultProps","Input","htmlFor","id","ref","inp","input","value","inpValue","type","onChange","handleChange","addTodo","TodoList","e","setState","target","state","todos","title","done","delTodo","idx","filter","index","localStorage","setItem","JSON","stringify","toggle","newTodos","parse","todo","checked","getItem","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f82ebdf0.chunk.js","sourcesContent":["import React from 'react';\r\nconst Buttons = (props)=>{\r\n    const btns = [1,2,3,4,5];\r\n      return <div>\r\n        {\r\n          btns.map(\r\n            (item)=>(\r\n              <button \r\n                key={item}\r\n                onClick={()=>props.getData(item)}\r\n              >\r\n                {item}\r\n              </button>\r\n          ))\r\n        }\r\n      </div>\r\n}\r\n\r\nexport default Buttons;\r\n","\r\nimport React, { Component } from 'react'\r\nclass List extends Component {\r\n  constructor(){\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>正在进行</h2>\r\n                <ul>\r\n                    {this.props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3>21?'red':'green'}}>\r\n                    {this.props.renderTodos(true)}\r\n                </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default List;\r\n","import React,{Component} from 'react'\r\nimport Buttons from '../components/Buttons';\r\nimport List from '../components/List';\r\n\r\nclass Home extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      data:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    fetch('https://cnodejs.org/api/v1/topics')\r\n    .then(res=>res.json())\r\n    .then( ({data}) => {\r\n      this.setState({data})\r\n    })\r\n  }\r\n  getData = (page)=>{\r\n    fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n    .then(res=>res.json())\r\n    .then( ({data}) => {\r\n      this.setState({data})\r\n    })\r\n  }\r\n  render(){\r\n    const {data} = this.state;\r\n    return <div>\r\n      <Buttons getData={this.getData}/>\r\n      <List data={data}/>\r\n    </div>\r\n  }\r\n}\r\n\r\n//命名导出(可以同时导出多个)\r\n// let a = 100;\r\n// export {a};\r\n// export {Home};\r\n//默认导出(只能导出一个)\r\nexport default Home;","import React, { Component } from 'react'\r\n// import Control from './components/Control';\r\n\r\n  \r\nexport class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false},\r\n        ]\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos),\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        return true;\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        // this.state.todos.push({title:this.state.inpValue})\r\n        // this.setState({\r\n        //     todos:this.state.todos\r\n        // })\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false,\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos})\r\n        // this.state.todos.splice(idx,1);\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        },()=>{\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n            return <li>\r\n                <input \r\n                onClick={()=>this.toggle(idx)}\r\n                checked={done} \r\n                type=\"checkbox\"/>\r\n                <span>{todo.title}</span>\r\n                <button \r\n                onClick={()=>this.delTodo(idx)}>删除</button>\r\n            </li>\r\n            }\r\n        }\r\n        )\r\n     } \r\n    render() {\r\n        // localStorage.setItem(\r\n        //     'todos',\r\n        //     JSON.stringify(this.state.todos)\r\n        // )\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter(item=>!item.done)\r\n        // console.log(arr1);\r\n        \r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={this.state.inpValue} \r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    />\r\n                <span dangerouslySetInnerHTML={{__html:todos.title}}></span>\r\n                <button onClick={this.addTodo}>添加</button>\r\n                <h2>正在进行</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3>21?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {/*条件渲染 */}\r\n                {\r\n                    3>21\r\n                    ?<button>登录</button>\r\n                    :<span>hello</span>\r\n                }\r\n                 <button>{3>2?'登录':'注册'}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Control\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Demo01 = (props) => {\r\n    return (\r\n        <div style={{\r\n            width:100,\r\n            height:100,\r\n            background:'red'\r\n            }}>\r\n                {props.name}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nDemo01.prototype = {\r\n    name:PropTypes.string.isRequired\r\n}\r\nDemo01.defaultProps = {\r\n    name:'tom'\r\n}\r\n\r\nexport default Demo01\r\n","// import React from 'react';\r\nimport React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={this.props.inpValue} \r\n                    type=\"text\"\r\n                    onChange={this.props.handleChange}\r\n                    />\r\n                {/* <span dangerouslySetInnerHTML={{__html:todos.title}}></span> */}\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;\r\n","import React, { Component } from 'react'\r\n// import TodoList from './components/TodoList';\r\nimport List from './List';\r\nimport Input from './Input';\r\n\r\n  \r\nexport class TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false},\r\n        ]\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos),\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        return true;\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false,\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        },()=>{\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n            return <li>\r\n                <input \r\n                onClick={()=>this.toggle(idx)}\r\n                checked={done} \r\n                type=\"checkbox\"/>\r\n                <span>{todo.title}</span>\r\n                <button \r\n                onClick={()=>this.delTodo(idx)}>删除</button>\r\n            </li>\r\n            }\r\n        }\r\n        )\r\n     } \r\n    render() {\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter(item=>!item.done)\r\n        \r\n        return (\r\n            <div className=\"TodoList\">\r\n                <Input \r\n                    inpValue={inpValue}\r\n                    addTodo = {this.addTodo}\r\n                    todos={todos}\r\n                    handleChange = {this.handleChange}\r\n                        />\r\n                <List renderTodos={this.renderTodos}\r\n                    // componentDidMount = {this.props.componentDidMount}\r\n                    // componentDidUpdate = {this.props.componentDidUpdate}\r\n                    // toggle = {this.props.toggle}\r\n                    todos={todos}\r\n                    />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoList\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/Home';\nimport Control from './components/Control';\nimport { Demo01 } from './pages/Demo01';\nimport TodoList from './components/TodoList';\n\n\nReactDOM.render(\n  <TodoList/>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//     <Demo01 name='13' />,\n//     document.getElementById('root')\n//   );\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n"],"sourceRoot":""}